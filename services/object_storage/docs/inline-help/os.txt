CLI command reference is now available at https://docs.cloud.oracle.com/iaas/tools/oci-cli/latest/oci_cli_docs/.
This file contains all the help for the 'os' command. 
This file is generated by running scripts/doc-gen/generate_cli_doc_pages,py, which dumps the output of --help for every command.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os --help
Usage: oci os [OPTIONS] COMMAND [ARGS]...

  Object Storage Service CLI

Options:
  -?, -h, --help  For detailed help on any of these individual commands, enter
                  <command> --help.

Commands:
  bucket                   A bucket is a container for storing objects...
  multipart
  ns
  object                   To use any of the API operations, you must be...
  object-lifecycle-policy  The collection of lifecycle policy rules that...
  preauth-request          Pre-authenticated requests provide a way to...
  work-request             A description of workRequest status.
  work-request-error
  work-request-log-entry

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os bucket --help
Usage: oci os bucket [OPTIONS] COMMAND [ARGS]...

  A bucket is a container for storing objects in a compartment within a
  namespace. A bucket is associated with a single compartment. The compartment
  has policies that indicate what actions a user can perform on a bucket and
  all the objects in the bucket. For more information, see [Managing Buckets].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you are not authorized, talk to an administrator. If you are an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  For detailed help on any of these individual commands, enter
                  <command> --help.

Commands:
  create     Creates a bucket in the given namespace with...
  delete     Deletes a bucket if the bucket is already...
  get        Gets the current representation of the given...
  list       Gets a list of all BucketSummary items in a...
  reencrypt  Reencrypts the data encryption key of the...
  update     Performs a partial or full update of a...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os bucket create --help
Usage: oci os bucket create [OPTIONS]

  Creates a bucket in the given namespace with a bucket name and optional
  user-defined metadata. Avoid entering confidential information in bucket
  names.

Options:
  -ns, --namespace-name, --namespace TEXT
                                  The Object Storage namespace used for the
                                  request. If not provided, this parameter will
                                  be obtained internally using a call to 'oci os
                                  ns get'
  --name TEXT                     The name of the bucket. Valid characters are
                                  uppercase or lowercase letters, numbers, and
                                  dashes. Bucket names must be unique within an
                                  Object Storage namespace. Avoid entering
                                  confidential information. example: Example:
                                  my-new-bucket1 [required]
  -c, --compartment-id TEXT       The ID of the compartment in which to create
                                  the bucket. [required]
  --metadata COMPLEX TYPE         Arbitrary string, up to 4KB, of keys and
                                  values for user-defined metadata.
                                  This is a
                                  complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --public-access-type [NoPublicAccess|ObjectRead|ObjectReadWithoutList]
                                  The type of public access enabled on this
                                  bucket. A bucket is set to `NoPublicAccess` by
                                  default, which only allows an authenticated
                                  caller to access the bucket and its contents.
                                  When `ObjectRead` is enabled on the bucket,
                                  public access is allowed for the `GetObject`,
                                  `HeadObject`, and `ListObjects` operations.
                                  When `ObjectReadWithoutList` is enabled on the
                                  bucket, public access is allowed for the
                                  `GetObject` and `HeadObject` operations.
  --storage-tier [Standard|Archive]
                                  The type of storage tier of this bucket. A
                                  bucket is set to 'Standard' tier by default,
                                  which means the bucket will be put in the
                                  standard storage tier. When 'Archive' tier
                                  type is set explicitly, the bucket is put in
                                  the Archive Storage tier. The 'storageTier'
                                  property is immutable after bucket is created.
  --object-events-enabled BOOLEAN
                                  A property that determines whether events will
                                  be generated for operations on objects in this
                                  bucket. This is false by default.
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags]. Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags]. Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --kms-key-id TEXT               The OCID of a KMS key id used to call KMS to
                                  generate the data key or decrypt the encrypted
                                  data key.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os bucket delete --help
Usage: oci os bucket delete [OPTIONS]

  Deletes a bucket if the bucket is already empty. If the bucket is not empty,
  use [DeleteObject] first. In addition, you cannot delete a bucket that has a
  multipart upload in progress or a pre-authenticated request associated with
  that bucket.

Options:
  -ns, --namespace-name, --namespace TEXT
                                  The Object Storage namespace used for the
                                  request. If not provided, this parameter will
                                  be obtained internally using a call to 'oci os
                                  ns get'
  -bn, --bucket-name, --name TEXT
                                  The name of the bucket. Avoid entering
                                  confidential information. Example: `my-new-
                                  bucket1` [required]
  --if-match TEXT                 The entity tag (ETag) to match. For creating
                                  and committing a multipart upload to an
                                  object, this is the entity tag of the target
                                  object. For uploading a part, this is the
                                  entity tag of the target part.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os bucket get --help
Usage: oci os bucket get [OPTIONS]

  Gets the current representation of the given bucket in the given Object
  Storage namespace.

Options:
  -ns, --namespace-name, --namespace TEXT
                                  The Object Storage namespace used for the
                                  request. If not provided, this parameter will
                                  be obtained internally using a call to 'oci os
                                  ns get'
  -bn, --bucket-name, --name TEXT
                                  The name of the bucket. Avoid entering
                                  confidential information. Example: `my-new-
                                  bucket1` [required]
  --if-match TEXT                 The entity tag (ETag) to match. For creating
                                  and committing a multipart upload to an
                                  object, this is the entity tag of the target
                                  object. For uploading a part, this is the
                                  entity tag of the target part.
  --if-none-match TEXT            The entity tag (ETag) to avoid matching. The
                                  only valid value is '*', which indicates that
                                  the request should fail if the object already
                                  exists. For creating and committing a
                                  multipart upload, this is the entity tag of
                                  the target object. For uploading a part, this
                                  is the entity tag of the target part.
  --fields [approximateCount|approximateSize]
                                  Bucket summary includes the 'namespace',
                                  'name', 'compartmentId', 'createdBy',
                                  'timeCreated', and 'etag' fields. This
                                  parameter can also include 'approximateCount'
                                  (approximate number of objects) and
                                  'approximateSize' (total approximate size in
                                  bytes of all objects). For example
                                  'approximateCount,approximateSize'.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os bucket list --help
Usage: oci os bucket list [OPTIONS]

  Gets a list of all BucketSummary items in a compartment. A BucketSummary
  contains only summary fields for the bucket and does not contain fields like
  the user-defined metadata.

  To use this and other API operations, you must be authorized in an IAM
  policy. If you are not authorized, talk to an administrator. If you are an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -ns, --namespace-name, --namespace TEXT
                                  The Object Storage namespace used for the
                                  request. If not provided, this parameter will
                                  be obtained internally using a call to 'oci os
                                  ns get'
  -c, --compartment-id TEXT       The ID of the compartment in which to list
                                  buckets. [required]
  --limit INTEGER                 The maximum number of items to return.
  --page TEXT                     The page at which to start retrieving results.
  --fields [tags]                 Bucket summary in list of buckets includes the
                                  'namespace', 'name', 'compartmentId',
                                  'createdBy', 'timeCreated', and 'etag' fields.
                                  This parameter can also include 'tags'
                                  (freeformTags and definedTags). The only
                                  supported value of this parameter is 'tags'
                                  for now. Example 'tags'.
  --all                           Fetches all pages of results. If you provide
                                  this option, then you cannot provide the
                                  --limit option.
  --page-size INTEGER             When fetching results, the number of results
                                  to fetch per call. Only valid when used with
                                  --all or --limit, and ignored otherwise.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os bucket reencrypt --help
Usage: oci os bucket reencrypt [OPTIONS]

  Reencrypts the data encryption key of the bucket and objects in the bucket.
  This is an asynchronous call, the system will start a work request task to
  reencrypt the data encryption key of the objects and chunks in the bucket.
  Only the objects created before the time the API call will be reencrypted.
  The call can take long time depending on how many objects in the bucket and
  how big the objects are. This API will return a work request id, so the user
  can use this id to retrieve the status of the work request task.

  A user can update kmsKeyId of the bucket, and then call this API, so the
  data encryption key of the bucket and objects in the bucket will be
  reencryped by the new kmsKeyId. Note that the system doesn't maintain what
  ksmKeyId is used to encrypt the object, the user has to maintain the mapping
  if they want.

Options:
  -ns, --namespace-name, --namespace TEXT
                                  The Object Storage namespace used for the
                                  request. If not provided, this parameter will
                                  be obtained internally using a call to 'oci os
                                  ns get'
  -bn, --bucket-name TEXT         The name of the bucket. Avoid entering
                                  confidential information. Example: `my-new-
                                  bucket1` [required]
  --wait-for-state [ACCEPTED|IN_PROGRESS|FAILED|COMPLETED|CANCELING|CANCELED]
                                  This operation asynchronously creates,
                                  modifies or deletes a resource and uses a work
                                  request to track the progress of the
                                  operation. Specify this option to perform the
                                  action and then wait until the work request
                                  reaches a certain state. Multiple states can
                                  be specified, returning on the first state.
                                  For example, --wait-for-state SUCCEEDED
                                  --wait-for-state FAILED would return on
                                  whichever lifecycle state is reached first. If
                                  timeout is reached, a return code of 2 is
                                  returned. For any other error, a return code
                                  of 1 is returned.
  --max-wait-seconds INTEGER      The maximum time to wait for the work request
                                  to reach the state defined by --wait-for-
                                  state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the work request to see if it has
                                  reached the state defined by --wait-for-state.
                                  Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os bucket update --help
Usage: oci os bucket update [OPTIONS]

  Performs a partial or full update of a bucket's user-defined metadata.

  Use UpdateBucket to move a bucket from one compartment to another within the
  same tenancy. Supply the compartmentID of the compartment that you want to
  move the bucket to. For more information about moving resources between
  compartments, see [Moving Resources to a Different Compartment].

Options:
  -ns, --namespace-name, --namespace TEXT
                                  The Object Storage namespace used for the
                                  request. If not provided, this parameter will
                                  be obtained internally using a call to 'oci os
                                  ns get'
  -bn, --bucket-name, --name TEXT
                                  The name of the bucket. Avoid entering
                                  confidential information. Example: `my-new-
                                  bucket1` [required]
  -c, --compartment-id TEXT       The compartmentId for the compartment to move
                                  the bucket to.
  --metadata COMPLEX TYPE         Arbitrary string, up to 4KB, of keys and
                                  values for user-defined metadata.
                                  This is a
                                  complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --public-access-type [NoPublicAccess|ObjectRead|ObjectReadWithoutList]
                                  The type of public access enabled on this
                                  bucket. A bucket is set to `NoPublicAccess` by
                                  default, which only allows an authenticated
                                  caller to access the bucket and its contents.
                                  When `ObjectRead` is enabled on the bucket,
                                  public access is allowed for the `GetObject`,
                                  `HeadObject`, and `ListObjects` operations.
                                  When `ObjectReadWithoutList` is enabled on the
                                  bucket, public access is allowed for the
                                  `GetObject` and `HeadObject` operations.
  --object-events-enabled BOOLEAN
                                  A property that determines whether events will
                                  be generated for operations on objects in this
                                  bucket. This is false by default.
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags]. Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags]. Example:
                                  `{"Operations": {"CostCenter": "42"}}
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --kms-key-id TEXT               A KMS key OCID that will be associated with
                                  the given bucket. If it is empty the Update
                                  operation will actually remove the KMS key, if
                                  there is one, from the given bucket. Note that
                                  the old kms key should still be enbaled in KMS
                                  otherwise all the objects in the bucket
                                  encrypted with the old KMS key will no longer
                                  be accessible.
  --if-match TEXT                 The entity tag (ETag) to match. For creating
                                  and committing a multipart upload to an
                                  object, this is the entity tag of the target
                                  object. For uploading a part, this is the
                                  entity tag of the target part.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os multipart --help
Usage: oci os multipart [OPTIONS] COMMAND [ARGS]...

Options:
  -?, -h, --help  For detailed help on any of these individual commands, enter
                  <command> --help.

Commands:
  abort  Aborts an uncommitted multipart upload...
  list   Lists all of the in-progress multipart...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os multipart abort --help
Usage: oci os multipart abort [OPTIONS]

  Aborts an uncommitted multipart upload

  Example:     oci os multipart abort -ns mynamespace -bn mybucket --object-
  name myfile.txt --upload-id my-upload-id

Options:
  -ns, --namespace, --namespace-name TEXT
                                  The top-level namespace used for the request.
                                  If not provided, this parameter will be
                                  obtained internally using a call to 'oci os ns
                                  get'
  -bn, --bucket-name TEXT         The name of the bucket. [required]
  -on, --object-name TEXT         The name of the object. [required]
  --upload-id TEXT                Upload ID to abort. [required]
  --force                         Abort the existing multipart upload without a
                                  confirmation prompt.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os multipart list --help
Usage: oci os multipart list [OPTIONS]

  Lists all of the in-progress multipart uploads for the given bucket in the
  given Object Storage namespace.

Options:
  -ns, --namespace-name, --namespace TEXT
                                  The Object Storage namespace used for the
                                  request. If not provided, this parameter will
                                  be obtained internally using a call to 'oci os
                                  ns get'
  -bn, --bucket-name TEXT         The name of the bucket. Avoid entering
                                  confidential information. Example: `my-new-
                                  bucket1` [required]
  --limit INTEGER                 The maximum number of items to return.
  --page TEXT                     The page at which to start retrieving results.
  --all                           Fetches all pages of results. If you provide
                                  this option, then you cannot provide the
                                  --limit option.
  --page-size INTEGER             When fetching results, the number of results
                                  to fetch per call. Only valid when used with
                                  --all or --limit, and ignored otherwise.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os ns --help
Usage: oci os ns [OPTIONS] COMMAND [ARGS]...

  A namespace is a logical entity that serves as a top-level container for all
  buckets and objects, allowing you to control bucket naming within your
  tenancy. Each tenancy is provided one unique and uneditable namespace that
  is global, spanning all regions and compartments. While bucket names must be
  unique within your namespace, bucket names within your namespace can
  duplicate bucket names used in the namespaces of other tenants.

  Namespace metadata stores the compartment assignments for resources created
  by the Amazon S3 Compatibility API and the Swift API. By default, resources
  created by the Amazon S3 Compatibility and Swift APIs are stored in the root
  compartment of the tenancy.

Options:
  -?, -h, --help  For detailed help on any of these individual commands, enter
                  <command> --help.

Commands:
  get              Gets the name of the namespace for the user
  get-metadata     Gets the metadata for the Object Storage...
  update-metadata  By default, buckets created using the Amazon...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os ns get --help
Usage: oci os ns get [OPTIONS]

  Each Oracle Cloud Infrastructure tenant is assigned one unique and
  uneditable Object Storage namespace. The namespace is a system-generated
  string assigned during account creation. For some older tenancies, the
  namespace string may be the tenancy name in all lower-case letters. You
  cannot edit a namespace.

  GetNamespace returns the name of the Object Storage namespace for the user
  making the request. If an optional compartmentId query parameter is
  provided, GetNamespace returns the namespace name of the corresponding
  tenancy, provided the user has access to it.

Options:
  -c, --compartment-id TEXT  This is an optional field representing the tenancy
                             OCID or the compartment OCID within the tenancy
                             whose Object Storage namespace name has to be
                             retrieved.
  --from-json TEXT           Provide input to this command as a JSON document
                             from a file using the file://path-to/file syntax.
                             The --generate-full-command-json-input option can
                             be used to generate a sample json file to be used
                             with this command option. The key names are pre-
                             populated and match the command option names
                             (converted to camelCase format, e.g. compartment-id
                             --> compartmentId), while the values of the keys
                             need to be populated by the user before using the
                             sample file as an input to this command. For any
                             command option that accepts multiple values, the
                             value of the key can be a JSON array.
                             
                             Options can
                             still be provided on the command line. If an option
                             exists in both the JSON document and the command
                             line then the command line specified value will be
                             used.
                             
                             For examples on usage of this option, please
                             see our "using CLI with advanced JSON options"
                             link: https://docs.cloud.oracle.com/iaas/Content/AP
                             I/SDKDocs/cliusing.htm#AdvancedJSONOptions
  -?, -h, --help             For detailed help on any of these individual
                             commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os ns get-metadata --help
Usage: oci os ns get-metadata [OPTIONS]

  Gets the metadata for the Object Storage namespace, which contains
  defaultS3CompartmentId and defaultSwiftCompartmentId.

  Any user with the OBJECTSTORAGE_NAMESPACE_READ permission will be able to
  see the current metadata. If you are not authorized, talk to an
  administrator. If you are an administrator who needs to write policies to
  give users access, see [Getting Started with Policies].

Options:
  -ns, --namespace-name, --namespace TEXT
                                  The Object Storage namespace used for the
                                  request. If not provided, this parameter will
                                  be obtained internally using a call to 'oci os
                                  ns get'
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os ns update-metadata --help
Usage: oci os ns update-metadata [OPTIONS]

  By default, buckets created using the Amazon S3 Compatibility API or the
  Swift API are created in the root compartment of the Oracle Cloud
  Infrastructure tenancy.

  You can change the default Swift/Amazon S3 compartmentId designation to a
  different compartmentId. All subsequent bucket creations will use the new
  default compartment, but no previously created buckets will be modified. A
  user must have OBJECTSTORAGE_NAMESPACE_UPDATE permission to make changes to
  the default compartments for Amazon S3 and Swift.

Options:
  -ns, --namespace-name, --namespace TEXT
                                  The Object Storage namespace used for the
                                  request. If not provided, this parameter will
                                  be obtained internally using a call to 'oci os
                                  ns get'
  --default-s3-compartment-id TEXT
                                  The updated compartment id for use by an S3
                                  client, if this field is set.
  --default-swift-compartment-id TEXT
                                  The updated compartment id for use by a Swift
                                  client, if this field is set.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object --help
Usage: oci os object [OPTIONS] COMMAND [ARGS]...

  To use any of the API operations, you must be authorized in an IAM policy.
  If you are not authorized, talk to an administrator. If you are an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  For detailed help on any of these individual commands, enter
                  <command> --help.

Commands:
  bulk-delete     Deletes all objects in a bucket which match...
  bulk-download   Downloads all objects which match the given...
  bulk-upload     Uploads all files in a given directory and...
  copy            Creates a request to copy an object within a...
  delete          Deletes an object.
  get             Gets the metadata and body of an object.
  head            Gets the user-defined metadata and entity tag...
  list            Lists the objects in a bucket.
  put             Creates a new object or overwrites an...
  rename          Rename an object in the given Object Storage...
  restore         Restores one or more objects specified by the...
  restore-status  Gets the restore status for an object.
  resume-put      Resume a previous multipart put.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object bulk-delete --help
Usage: oci os object bulk-delete [OPTIONS]

  Deletes all objects in a bucket which match the provided criteria.

  Examples
  ========

  Deleting all objects in the bucket
  ----------------------------------
  oci os object bulk-delete -ns mynamespace -bn mybucket

  Delete all objects that match a given prefix
  --------------------------------------------
  oci os object bulk-delete -ns mynamespace -bn mybucket --prefix level1/level2/ --prefix myprefix

  You can delete all objects that match a given prefix by specifying the --prefix flag. In the above example, "--prefix myprefix" would
  match object names such as myprefix_textfile1.txt, myprefix_myImage.png etc.

  If you have named your objects so that they exist in Object Storage as a hierarchy, e.g. level1/level2/level3/myobject.txt, then you
  can delete objects at a given level (and all sub levels) by specifying a prefix:

  oci os object bulk-delete -ns mynamespace -bn mybucket --prefix level1/level2/

  This will delete all objects of the form level1/level2/<object name>, level1/level2/leve3/<object name>,
  level1/level2/leve3/level4/<object name> etc.

  Limiting deleted objects using a prefix and delimiter
  -----------------------------------------------------
  oci os object bulk-delete -ns mynamespace -bn mybucket --prefix level1/level2/ --delimiter /

  If you have named your objects so that they exist in Object Storage as a hierarchy, e.g. level1/level2/level3/myobject.txt, and you only
  want to delete objects at a given level of the hierarchy, e.g. example everything of the form level1/level2/<object name> but not
  level1/level2/leve3/<object name> or any other sub-levels, you can specify a prefix and delimiter. Currently the only supported delimiter
  is /

  Previewing what would be deleted
  ----------------------------
  oci os object bulk-delete -ns mynamespace -bn mybucket --dry-run
  oci os object bulk-delete -ns mynamespace -bn mybucket --prefix level1/level2/ --dry-run
  oci os object bulk-delete -ns mynamespace -bn mybucket --prefix level1/level2/ --delimiter / --dry-run

  For any bulk-delete command you can get a list of all objects which would be deleted, but without actually deleting them, by using the --dry-run
  flag

  Do not prompt for delete
  ------------------------
  oci os object bulk-delete -ns mynamespace -bn mybucket --force
  oci os object bulk-delete -ns mynamespace -bn mybucket --prefix level1/level2/ --force
  oci os object bulk-delete -ns mynamespace -bn mybucket --prefix level1/level2/ --delimiter / --force

  By default, the bulk-delete command will prompt you prior to deleting objects. To suppress this prompt, pass the --force option.

Options:
  -ns, --namespace, --namespace-name TEXT
                                  The top-level namespace used for the request.
                                  If not provided, this parameter will be
                                  obtained internally using a call to 'oci os ns
                                  get'
  -bn, --bucket-name TEXT         The name of the bucket. [required]
  --prefix TEXT                   Delete all objects with the given prefix. Omit
                                  this parameter to delete all objects in the
                                  bucket.
  --delimiter TEXT                When this parameter is set, only objects whose
                                  names do not contain the delimiter character
                                  (after an optionally specified prefix) are
                                  deleted. Scanned objects whose names contain
                                  the delimiter have part of their name up to
                                  the last occurrence of the delimiter (after
                                  the optional prefix) returned as a set of
                                  prefixes. Note: Only '/' is a supported
                                  delimiter character at this time.
  --dry-run                       Displays a list of objects which would be
                                  deleted by this command, if it were run
                                  without --dry-run. If --dry-run is passed, no
                                  objects will actually be deleted.
  --force                         Do not ask for confirmation prior to
                                  performing the bulk delete.
  --parallel-operations-count INTEGER
                                  The number of parallel operations to perform.
                                  Decreasing this value will make bulk deletes
                                  less resource intensive but they may take
                                  longer. Increasing this value may improve bulk
                                  delete times, but the upload process will
                                  consume more system resources and network
                                  bandwidth. [default: 10]
  --include TEXT                  Only delete objects which match the provided
                                  pattern. Patterns are taken relative to the
                                  bucket root. This option can be provided
                                  mulitple times to match on mulitple patterns.
                                  Supported pattern symbols are:
                                  
                                  
                                  *: Matches
                                  everything
                                  
                                  ?: Matches any single character
                                  [sequence]: Matches any character in sequence
                                  [!sequence]: Matches any character not in
                                  sequence
  --exclude TEXT                  Only download objects which do not match the
                                  provided pattern. Patterns are taken relative
                                  to the bucket root. This option can be
                                  provided mulitple times to match on mulitple
                                  patterns. Supported pattern symbols are:
                                  
                                  
                                  *:
                                  Matches everything
                                  
                                  ?: Matches any single
                                  character
                                  
                                  [sequence]: Matches any character
                                  in sequence
                                  
                                  [!sequence]: Matches any
                                  character not in sequence
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object bulk-download --help
Usage: oci os object bulk-download [OPTIONS]

  Downloads all objects which match the given prefix to a given directory.

  Examples
  ========

  Download all objects in the bucket
  ------------------------------
  oci os object bulk-download -ns mynamespace -bn mybucket --download-dir path/to/download/directory

  Download all objects that match a given prefix
  ----------------------------------------------
  oci os object bulk-download -ns mynamespace -bn mybucket --download-dir path/to/download/directory --prefix myprefix

  You can download all objects that match a given prefix by specifying the --prefix flag. In the above example, "--prefix myprefix" would
  match object names such as myPrefix_textfile1.txt, myPrefix_myImage.png etc.

  If you have named your objects so that they exist in Object Storage as a hierarchy, e.g. level1/level2/level3/myobject.txt, then you
  can download objects at a given level (and all sub levels) by specifying a prefix:

  oci os object bulk-download -ns mynamespace -bn mybucket --download-dir path/to/download/directory --prefix level1/level2/

  This will download all objects of the form level1/level2/<object name>, level1/level2/leve3/<object name>,
  level1/level2/leve3/level4/<object name> etc.

  Limiting downloaded objects using a prefix and delimiter
  --------------------------------------------------------
  oci os object bulk-download -ns mynamespace -bn mybucket --download-dir path/to/download/directory --prefix level1/level2/ --delimiter /

  If you have named your objects so that they exist in Object Storage as a hierarchy, e.g. level1/level2/level3/myobject.txt, and you only
  want to download objects at a given level of the hierarchy, e.g. example everything of the form level1/level2/<object name> but not
  level1/level2/leve3/<object name> or any other sub-levels, you can specify a prefix and delimiter. Currently the only supported delimiter
  is /

  Overwriting or skipping files
  ------------------------------
  oci os object bulk-download -ns mynamespace -bn mybucket --download-dir path/to/download/directory --overwrite
  oci os object bulk-download -ns mynamespace -bn mybucket --download-dir path/to/download/directory --no-overwrite

  If files with the same name as the objects being downloaded already exist in the download directory, you can opt to overwrite them with the
  --overwrite option, or preserve them with the --no-overwrite option.

Options:
  -ns, --namespace, --namespace-name TEXT
                                  The top-level namespace used for the request.
                                  If not provided, this parameter will be
                                  obtained internally using a call to 'oci os ns
                                  get'
  -bn, --bucket-name TEXT         The name of the bucket. [required]
  --prefix TEXT                   Retrieve all objects with the given prefix.
                                  Omit this parameter to get all objects in the
                                  bucket
  --delimiter TEXT                When this parameter is set, only objects whose
                                  names do not contain the delimiter character
                                  (after an optionally specified prefix) are
                                  returned. Scanned objects whose names contain
                                  the delimiter have part of their name up to
                                  the last occurrence of the delimiter (after
                                  the optional prefix) returned as a set of
                                  prefixes. Note: Only '/' is a supported
                                  delimiter character at this time.
  --download-dir TEXT             The directory where retrieved objects will be
                                  placed as files. This directory will be
                                  created if it does not exist. [required]
  --overwrite                     If a file with the same name as an object
                                  already exists in the download directory,
                                  overwrite it. If neither this flag nor --no-
                                  overwrite is specified, you will be prompted
                                  each time a file would be overwritten.
  --no-overwrite                  If a file with the same name as an object
                                  already exists in the download directory, do
                                  not overwite it. If neither this flag nor
                                  --overwrite is specified, you will be prompted
                                  each time a file would be overwritten
  --parallel-operations-count INTEGER
                                  The number of parallel operations to perform.
                                  Decreasing this value will make bulk downloads
                                  less resource intensive but they may take
                                  longer. Increasing this value may improve bulk
                                  download times, but the upload process will
                                  consume more system resources and network
                                  bandwidth. [default: 10]
  --multipart-download-threshold INTEGER RANGE
                                  Objects larger than this size (in MiB) will be
                                  downloaded in multiple parts. The minimum
                                  allowable threshold is 128 MiB.
  --part-size INTEGER RANGE       Part size (in MiB) to use when downloading an
                                  object in multiple parts. The minimum
                                  allowable size is 128 MiB.
  --include TEXT                  Only download objects which match the provided
                                  pattern. Patterns are taken relative to the
                                  DOWNLOAD directory. This option can be
                                  provided mulitple times to match on mulitple
                                  patterns. Supported pattern symbols are:
                                  
                                  
                                  *:
                                  Matches everything
                                  
                                  ?: Matches any single
                                  character
                                  
                                  [sequence]: Matches any character
                                  in sequence
                                  
                                  [!sequence]: Matches any
                                  character not in sequence
  --exclude TEXT                  Only download objects which do not match the
                                  provided pattern. Patterns are taken relative
                                  to the DOWNLOAD directory. This option can be
                                  provided mulitple times to match on mulitple
                                  patterns. Supported pattern symbols are:
                                  
                                  
                                  *:
                                  Matches everything
                                  
                                  ?: Matches any single
                                  character
                                  
                                  [sequence]: Matches any character
                                  in sequence
                                  
                                  [!sequence]: Matches any
                                  character not in sequence
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object bulk-upload --help
Usage: oci os object bulk-upload [OPTIONS]

  Uploads all files in a given directory and all subdirectories.

  Examples
  ========

  Upload all files from a given directory
  -----------------------------------------
  oci os object bulk-upload -ns mynamespace -bn mybucket --src-dir path/to/upload/directory

  Upload all files and prefix the object names in Object Storage
  --------------------------------------------------------------
  oci os object bulk-upload -ns mynamespace -bn mybucket --src-dir path/to/upload/directory --object-prefix my-prefix/

  In the above example command, all files uploaded to Object Storage will have
  their object names prefixed with "my-prefix/". This will allow you to
  further group uploaded files together or potentially avoid name collisions
  when uploading files.

  Forcing object overwrite to resolve object name collision
  ----------------------------------------------------------
  oci os object bulk-upload -ns mynamespace -bn mybucket --src-dir path/to/upload/directory --overwrite

  If a file being uploaded already exists in Object Storage with the same name, it can be overwritten without a prompt by
  using the --overwrite flag. Specifying --overwrite will also allow for faster uploads as the CLI will not
  initially check whether or not the files already exist in Object Storage with the same name.

  Prevent object overwrite to resolve object name collision
  ----------------------------------------------------------
  oci os object bulk-upload -ns mynamespace -bn mybucket --src-dir path/to/upload/directory --no-overwrite

  If a file being uploaded already exists in Object Storage with the same name, it can be preserved (not overwritten) without a
  prompt by using the --no-overwrite flag.

Options:
  -ns, --namespace, --namespace-name TEXT
                                  Object Storage namespace. If not provided,
                                  this parameter will be obtained internally
                                  using a call to 'oci os ns get'
  -bn, --bucket-name TEXT         The name of the bucket. [required]
  --src-dir TEXT                  The directory which contains files to upload.
                                  Files in the directory and all subdirectories
                                  will be uploaded. [required]
  --object-prefix TEXT            A prefix to apply to the names of all files
                                  being uploaded
  --metadata TEXT                 Arbitrary string keys and values for user-
                                  defined metadata. This will be applied to all
                                  files being uploaded. Must be in JSON format.
                                  Example: '{"key1":"value1","key2":"value2"}'
  --content-type TEXT             The content type to apply to all files being
                                  uploaded. If content type is set to auto, then
                                  the CLI will guess the content type of the
                                  file.
  --content-language TEXT         The content language to apply to all files
                                  being uploaded.
  --content-encoding TEXT         The content encoding to apply to all files
                                  being uploaded.
  --overwrite                     If a file being uploaded already exists in
                                  Object Storage with the same name, overwrite
                                  the existing object in Object Storage without
                                  a confirmation prompt. If neither this flag
                                  nor --no-overwrite is specified, you will be
                                  prompted each time an object with the same
                                  name would be overwritten.
                                  
                                  Specifying this
                                  flag will also allow for faster uploads as the
                                  CLI will not initially check whether or not
                                  the files with the same name already exist in
                                  Object Storage.
  --no-overwrite                  If a file being uploaded already exists in
                                  Object Storage with the same name, do not
                                  overwite the object. If neither this flag nor
                                  --overwrite is specified, you will be prompted
                                  each time an object with the same name would
                                  be overwritten.
  --no-multipart                  Do not use multipart uploads to upload the
                                  file in parts. By default, files above 128 MiB
                                  will be uploaded in multiple parts, then
                                  combined server-side. This applies to all
                                  files being uploaded
  --part-size INTEGER             Part size (in MiB) to use if uploading via
                                  multipart upload operations. This applies to
                                  all files which will be uploaded in multiple
                                  parts. Part size must be greater than 10 MiB
  --disable-parallel-uploads      [DEPRECATED] This option is no longer used. If
                                  a file in the directory will be uploaded in
                                  multiple parts, this option disables those
                                  parts from being uploaded in parallel. This
                                  applies to all files being uploaded in
                                  multiple parts
  --parallel-upload-count INTEGER RANGE
                                  The number of parallel operations to perform.
                                  Decreasing this value will make bulk uploads
                                  less resource intensive but they may take
                                  longer. Increasing this value may improve bulk
                                  upload times, but the upload process will
                                  consume more system resources and network
                                  bandwidth. The maximum is 1000. [default: 10]
  --verify-checksum               Verify the checksum of the uploaded object
                                  with the local file.
  --include TEXT                  Only upload files which match the provided
                                  pattern. Patterns are taken relative to the
                                  CURRENT directory. This option can be provided
                                  mulitple times to match on mulitple patterns.
                                  Supported pattern symbols are:
                                  
                                  
                                  *: Matches
                                  everything
                                  
                                  ?: Matches any single character
                                  [sequence]: Matches any character in sequence
                                  [!sequence]: Matches any character not in
                                  sequence
  --exclude TEXT                  Only upload files which do not match the
                                  provided pattern. Patterns are taken relative
                                  to the CURRENT directory. This option can be
                                  provided mulitple times to match on mulitple
                                  patterns. Supported pattern symbols are:
                                  
                                  
                                  *:
                                  Matches everything
                                  
                                  ?: Matches any single
                                  character
                                  
                                  [sequence]: Matches any character
                                  in sequence
                                  
                                  [!sequence]: Matches any
                                  character not in sequence
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object copy --help
Usage: oci os object copy [OPTIONS]

  Creates a request to copy an object within a region or to another region.

Options:
  -ns, --namespace-name, --namespace TEXT
                                  The Object Storage namespace used for the
                                  request. If not provided, this parameter will
                                  be obtained internally using a call to 'oci os
                                  ns get'
  -bn, --bucket-name TEXT         The name of the bucket. Avoid entering
                                  confidential information. Example: `my-new-
                                  bucket1` [required]
  --source-object-name TEXT       The name of the object to be copied.
                                  [required]
  --destination-bucket TEXT       The destination bucket the object will be
                                  copied to. [required]
  --source-object-if-match-e-tag TEXT
                                  The entity tag (ETag) to match against that of
                                  the source object. Used to confirm that the
                                  source object with a given name is the version
                                  of that object storing a specified ETag.
  --destination-object-if-match-e-tag TEXT
                                  The entity tag (ETag) to match against that of
                                  the destination object (an object intended to
                                  be overwritten). Used to confirm that the
                                  destination object stored under a given name
                                  is the version of that object storing a
                                  specified entity tag.
  --destination-object-if-none-match-e-tag TEXT
                                  The entity tag (ETag) to avoid matching. The
                                  only valid value is '*', which indicates that
                                  the request should fail if the object already
                                  exists in the destination bucket.
  --destination-object-metadata COMPLEX TYPE
                                  Arbitrary string keys and values for the user-
                                  defined metadata for the object. Keys must be
                                  in "opc-meta-*" format. Avoid entering
                                  confidential information. Metadata key-value
                                  pairs entered in this field are assigned to
                                  the destination object. If you enter no
                                  metadata values, the destination object will
                                  inherit any existing metadata values
                                  associated with the source object.
                                  This is a
                                  complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --wait-for-state [ACCEPTED|IN_PROGRESS|FAILED|COMPLETED|CANCELING|CANCELED]
                                  This operation asynchronously creates,
                                  modifies or deletes a resource and uses a work
                                  request to track the progress of the
                                  operation. Specify this option to perform the
                                  action and then wait until the work request
                                  reaches a certain state. Multiple states can
                                  be specified, returning on the first state.
                                  For example, --wait-for-state SUCCEEDED
                                  --wait-for-state FAILED would return on
                                  whichever lifecycle state is reached first. If
                                  timeout is reached, a return code of 2 is
                                  returned. For any other error, a return code
                                  of 1 is returned.
  --max-wait-seconds INTEGER      The maximum time to wait for the work request
                                  to reach the state defined by --wait-for-
                                  state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the work request to see if it has
                                  reached the state defined by --wait-for-state.
                                  Defaults to 30 seconds.
  --destination-region TEXT       The destination region object will be copied
                                  to.
  --destination-namespace TEXT    The destination namespace object will be
                                  copied to.
  --destination-object-name TEXT  The destination name for the copy object.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object delete --help
Usage: oci os object delete [OPTIONS]

  Deletes an object.

Options:
  -ns, --namespace-name, --namespace TEXT
                                  The Object Storage namespace used for the
                                  request. If not provided, this parameter will
                                  be obtained internally using a call to 'oci os
                                  ns get'
  -bn, --bucket-name TEXT         The name of the bucket. Avoid entering
                                  confidential information. Example: `my-new-
                                  bucket1` [required]
  --object-name, --name TEXT      The name of the object. Avoid entering
                                  confidential information. Example:
                                  `test/object1.log` [required]
  --if-match TEXT                 The entity tag (ETag) to match. For creating
                                  and committing a multipart upload to an
                                  object, this is the entity tag of the target
                                  object. For uploading a part, this is the
                                  entity tag of the target part.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object get --help
Usage: oci os object get [OPTIONS]

  Gets the metadata and body of an object.

  Example:     oci os object get -ns mynamespace -bn mybucket --name
  myfile.txt --file /Users/me/myfile.txt

Options:
  -ns, --namespace, --namespace-name TEXT
                                  The top-level namespace used for the request.
                                  If not provided, this parameter will be
                                  obtained internally using a call to 'oci os ns
                                  get'
  -bn, --bucket-name TEXT         The name of the bucket. [required]
  --name TEXT                     The name of the object. [required]
  --file FILENAME                 The name of the file that will receive the
                                  object content, or '-' to write to STDOUT.
                                  [required]
  --if-match TEXT                 The entity tag to match.
  --if-none-match TEXT            The entity tag to avoid matching.
  --range TEXT                    Byte range to fetch. Follows https://tools.iet
                                  f.org/html/rfc7233#section-2.1. Example:
                                  bytes=2-10
  --multipart-download-threshold INTEGER RANGE
                                  Objects larger than this size (in MiB) will be
                                  downloaded in multiple parts. The minimum
                                  allowable threshold is 128 MiB.
  --part-size INTEGER RANGE       Part size (in MiB) to use when downloading an
                                  object in multiple parts. The minimum
                                  allowable size is 128 MiB.
  --parallel-download-count INTEGER
                                  The number of parallel operations to perform
                                  when downloading an object in multiple parts.
                                  Decreasing this value will make multipart
                                  downloads less resource intensive but they may
                                  take longer. Increasing this value may improve
                                  download times, but the download process will
                                  consume more system resources and network
                                  bandwidth. [default: 10]
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object head --help
Usage: oci os object head [OPTIONS]

  Gets the user-defined metadata and entity tag for an object.

  Example:     oci os object head -ns mynamespace -bn mybucket --name
  myfile.txt

Options:
  -ns, --namespace, --namespace-name TEXT
                                  The top-level namespace used for the request.
                                  If not provided, this parameter will be
                                  obtained internally using a call to 'oci os ns
                                  get'
  -bn, --bucket-name TEXT         The name of the bucket. [required]
  --name TEXT                     The name of the object. [required]
  --if-match TEXT                 The entity tag to match.
  --if-none-match TEXT            The entity tag to avoid matching.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object list --help
Usage: oci os object list [OPTIONS]

  Lists the objects in a bucket.

  Example:     oci os object list -ns mynamespace -bn mybucket --fields
  name,size,timeCreated

Options:
  -ns, --namespace, --namespace-name TEXT
                                  The top-level namespace used for the request.
                                  If not provided, this parameter will be
                                  obtained internally using a call to 'oci os ns
                                  get'
  -bn, --bucket-name TEXT         The name of the bucket. [required]
  --prefix TEXT                   Only object names that begin with this prefix
                                  will be returned.
  --start TEXT                    Only object names greater or equal to this
                                  parameter will be returned.
  --end TEXT                      Only object names less than this parameter
                                  will be returned.
  --limit INTEGER                 The maximum number of items to return.
                                  [default: 100]
  --page-size INTEGER             When fetching results, the number of results
                                  to fetch per call. Only valid when used with
                                  --all or --limit, and ignored otherwise.
  --all                           Fetches all pages of results. If you provide
                                  this option, then you cannot provide the
                                  --limit option.
  --delimiter TEXT                When this parameter is set, only objects whose
                                  names do not contain the delimiter character
                                  (after an optionally specified prefix) are
                                  returned. Scanned objects whose names contain
                                  the delimiter have part of their name up to
                                  the last occurrence of the delimiter (after
                                  the optional prefix) returned as a set of
                                  prefixes. Note: Only '/' is a supported
                                  delimiter character at this time.
  --fields TEXT                   Object summary in list of objects includes the
                                  'name' field. This parameter may also include
                                  'size' (object size in bytes), 'md5', and
                                  'timeCreated' (object creation date and time)
                                  fields. Value of this parameter should be a
                                  comma separated, case-insensitive list of
                                  those field names. [default:
                                  name,size,timeCreated,md5]
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object put --help
Usage: oci os object put [OPTIONS]

  Creates a new object or overwrites an existing one.

  The object can be uploaded as a single part or as multiple parts. Below are
  the rules for whether an object will be uploaded via single or multipart
  upload (listed in order of precedence):

      * If the object is being uploaded from STDIN, it will be uploaded as a
      multipart upload (if the object content is smaller than --part-size,
      default for STDIN is 10 MiB, the multipart upload may contain only one
      part, but it will still use the MultipartUpload API)

      * If the --no-multipart flag is specified, the object will be uploaded
      as a single part regardless of size (specifying --no-multipart when
      uploading from STDIN will result in an error)

      * If the object is larger than --part-size, it will be uploaded as
      multiple parts (the default part size is 128 MiB)

      * If the object is empty it will be uploaded as a single part

  Example:     oci os object put -ns mynamespace -bn mybucket --name
  myfile.txt --file /Users/me/myfile.txt --metadata
  '{"key1":"value1","key2":"value2"}'

Options:
  -ns, --namespace, --namespace-name TEXT
                                  The top-level namespace used for the request.
                                  If not provided, this parameter will be
                                  obtained internally using a call to 'oci os ns
                                  get'
  -bn, --bucket-name TEXT         The name of the bucket. [required]
  --file FILENAME                 The file to load as the content of the object,
                                  or '-' to read from STDIN. [required]
  --name TEXT                     The name of the object. Default value is the
                                  filename excluding the path. Required if
                                  reading object from STDIN.
  --if-match TEXT                 The entity tag to match.
  --content-md5 TEXT              The optional base-64 header that defines the
                                  encoded MD5 hash of the body. If the optional
                                  Content-MD5 header is present, Object Storage
                                  performs an integrity check on the body of the
                                  HTTP request by computing the MD5 hash for the
                                  body and comparing it to the MD5 hash supplied
                                  in the header. If the two hashes do not match,
                                  the object is rejected and an HTTP-400
                                  Unmatched Content MD5 error is returned with
                                  the message:
                                  "The computed MD5 of the request
                                  body (ACTUAL_MD5) does not match the Content-
                                  MD5 header (HEADER_MD5)"
  --metadata TEXT                 Arbitrary string keys and values for user-
                                  defined metadata. Must be in JSON format.
                                  Example: '{"key1":"value1","key2":"value2"}'
  --content-type TEXT             The optional Content-Type header that defines
                                  the standard MIME type format of the object.
                                  Content type defaults to 'application/octet-
                                  stream' if not specified in the PutObject
                                  call. Specifying values for this header has no
                                  effect on Object Storage behavior. Programs
                                  that read the object determine what to do
                                  based on the value provided. For example, you
                                  could use this header to identify and perform
                                  special operations on text only objects.
  --content-language TEXT         The optional Content-Language header that
                                  defines the content language of the object to
                                  upload. Specifying values for this header has
                                  no effect on Object Storage behavior. Programs
                                  that read the object determine what to do
                                  based on the value provided. For example, you
                                  could use this header to identify and
                                  differentiate objects based on a particular
                                  language.
  --content-encoding TEXT         The optional Content-Encoding header that
                                  defines the content encodings that were
                                  applied to the object to upload. Specifying
                                  values for this header has no effect on Object
                                  Storage behavior. Programs that read the
                                  object determine what to do based on the value
                                  provided. For example, you could use this
                                  header to determine what decoding mechanisms
                                  need to be applied to obtain the media-type
                                  specified by the Content-Type header of the
                                  object.
  --force                         If the object name already exists, overwrite
                                  the existing object without a confirmation
                                  prompt.
  --no-overwrite                  If the object name already exists, do not
                                  overwrite the existing object.
  --no-multipart                  Do not use multipart uploads to upload the
                                  file in parts. By default files above 128 MiB
                                  will be uploaded in multiple parts, then
                                  combined server-side.
  --part-size INTEGER             Part size (in MiB) to use if uploading via
                                  multipart upload operations
  --disable-parallel-uploads      If the object will be uploaded in multiple
                                  parts, this option disables those parts from
                                  being uploaded in parallel.
  --parallel-upload-count INTEGER RANGE
                                  If the object will be uploaded in multiple
                                  parts, this option allows you to specify the
                                  maximum number of parts that can be uploaded
                                  in parallel. This option cannot be used with
                                  --disable-parallel-uploads or --no-multipart.
                                  Defaults to 3 and the maximum is 1000.
  --verify-checksum               Verify the checksum of the uploaded object
                                  with the local file.
  --content-disposition TEXT      The optional Content-Disposition header that
                                  defines presentational information for the
                                  object to be returned in GetObject and
                                  HeadObject responses. Specifying values for
                                  this header has no effect on Object Storage
                                  behavior. Programs that read the object
                                  determine what to do based on the value
                                  provided. For example, you could use this
                                  header to let users download objects with
                                  custom filenames in a browser.
  --cache-control TEXT            The optional Cache-Control header that defines
                                  the caching behavior value to be returned in
                                  GetObject and HeadObject responses. Specifying
                                  values for this header has no effect on Object
                                  Storage behavior. Programs that read the
                                  object determine what to do based on the value
                                  provided. For example, you could use this
                                  header to identify objects that require
                                  caching restrictions.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object rename --help
Usage: oci os object rename [OPTIONS]

  Rename an object in the given Object Storage namespace.

Options:
  -ns, --namespace-name, --namespace TEXT
                                  The Object Storage namespace used for the
                                  request. If not provided, this parameter will
                                  be obtained internally using a call to 'oci os
                                  ns get'
  -bn, --bucket-name, --bucket TEXT
                                  The name of the bucket. Avoid entering
                                  confidential information. Example: `my-new-
                                  bucket1` [required]
  --source-name, --name TEXT      The name of the source object to be renamed.
                                  [required]
  --new-name TEXT                 The new name of the source object. [required]
  --src-obj-if-match-e-tag, --src-if-match TEXT
                                  The if-match entity tag (ETag) of the source
                                  object.
  --new-obj-if-match-e-tag, --new-if-match TEXT
                                  The if-match entity tag (ETag) of the new
                                  object.
  --new-obj-if-none-match-e-tag, --new-if-none-match TEXT
                                  The if-none-match entity tag (ETag) of the new
                                  object.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object restore --help
Usage: oci os object restore [OPTIONS]

  Restores one or more objects specified by the objectName parameter. By
  default objects will be restored for 24 hours. Duration can be configured
  using the hours parameter.

Options:
  --hours INTEGER                 The number of hours for which this object will
                                  be restored. By default objects will be
                                  restored for 24 hours. You can instead
                                  configure the duration using the hours
                                  parameter.
  -ns, --namespace, --namespace-name TEXT
                                  The top-level namespace used for the request.
                                  If not provided, this parameter will be
                                  obtained internally using a call to 'oci os ns
                                  get'
  -bn, --bucket, --bucket-name TEXT
                                  The name of the bucket. Avoid entering
                                  confidential information. Example: `my-new-
                                  bucket1` [required]
  --name TEXT                     A object which was in an archived state and
                                  need to be restored. [required]
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object restore-status --help
Usage: oci os object restore-status [OPTIONS]

  Gets the restore status for an object.

  Example:     oci os object restore-status -ns mynamespace -bn mybucket
  --name myfile.txt

Options:
  -ns, --namespace, --namespace-name TEXT
                                  The top-level namespace used for the request.
                                  If not provided, this parameter will be
                                  obtained internally using a call to 'oci os ns
                                  get'
  -bn, --bucket-name TEXT         The name of the bucket. [required]
  --name TEXT                     The name of the object. [required]
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object resume-put --help
Usage: oci os object resume-put [OPTIONS]

  Resume a previous multipart put.

  Example:     oci os object resume-put -ns mynamespace -bn mybucket --name
  myfile.txt --file /Users/me/myfile.txt --upload-id my-upload-id

Options:
  -ns, --namespace, --namespace-name TEXT
                                  The top-level namespace used for the request.
                                  If not provided, this parameter will be
                                  obtained internally using a call to 'oci os ns
                                  get'
  -bn, --bucket-name TEXT         The name of the bucket. [required]
  --file FILENAME                 The file to load as the content of the object.
                                  [required]
  --name TEXT                     The name of the object. Default value is the
                                  filename excluding the path.
  --upload-id TEXT                Upload ID to resume. [required]
  --part-size INTEGER             Part size in MiB
  --disable-parallel-uploads      If the object will be uploaded in multiple
                                  parts, this option disables those parts from
                                  being uploaded in parallel.
  --parallel-upload-count INTEGER RANGE
                                  This option allows you to specify the maximum
                                  number of parts that can be uploaded in
                                  parallel. This option cannot be used with
                                  --disable-parallel-uploads. Defaults to 3 and
                                  the maximum is 1000.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object-lifecycle-policy --help
Usage: oci os object-lifecycle-policy [OPTIONS] COMMAND [ARGS]...

  The collection of lifecycle policy rules that together form the object
  lifecycle policy of a given bucket.

Options:
  -?, -h, --help  For detailed help on any of these individual commands, enter
                  <command> --help.

Commands:
  delete  Deletes the object lifecycle policy for the...
  get     Gets the object lifecycle policy for the...
  put     Creates or replaces the object lifecycle...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object-lifecycle-policy delete --help
Usage: oci os object-lifecycle-policy delete [OPTIONS]

  Deletes the object lifecycle policy for the bucket.

Options:
  -ns, --namespace-name, --namespace TEXT
                                  The Object Storage namespace used for the
                                  request. If not provided, this parameter will
                                  be obtained internally using a call to 'oci os
                                  ns get'
  -bn, --bucket-name TEXT         The name of the bucket. Avoid entering
                                  confidential information. Example: `my-new-
                                  bucket1` [required]
  --if-match TEXT                 The entity tag (ETag) to match. For creating
                                  and committing a multipart upload to an
                                  object, this is the entity tag of the target
                                  object. For uploading a part, this is the
                                  entity tag of the target part.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object-lifecycle-policy get --help
Usage: oci os object-lifecycle-policy get [OPTIONS]

  Gets the object lifecycle policy for the bucket.

Options:
  -ns, --namespace-name, --namespace TEXT
                                  The Object Storage namespace used for the
                                  request. If not provided, this parameter will
                                  be obtained internally using a call to 'oci os
                                  ns get'
  -bn, --bucket-name TEXT         The name of the bucket. Avoid entering
                                  confidential information. Example: `my-new-
                                  bucket1` [required]
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os object-lifecycle-policy put --help
Usage: oci os object-lifecycle-policy put [OPTIONS]

  Creates or replaces the object lifecycle policy for the bucket.

Options:
  -ns, --namespace-name, --namespace TEXT
                                  The Object Storage namespace used for the
                                  request. If not provided, this parameter will
                                  be obtained internally using a call to 'oci os
                                  ns get'
  -bn, --bucket-name TEXT         The name of the bucket. Avoid entering
                                  confidential information. Example: `my-new-
                                  bucket1` [required]
  --items COMPLEX TYPE            The bucket's set of lifecycle policy rules.
                                  This option is a JSON list with items of type
                                  ObjectLifecycleRule.  For documentation on
                                  ObjectLifecycleRule please see our API
                                  reference: https://docs.cloud.oracle.com/api/#
                                  /en/objectstorage/20160918/datatypes/ObjectLif
                                  ecycleRule.
                                  This is a complex type whose value
                                  must be valid JSON. The value can be provided
                                  as a string on the command line or passed in
                                  as a file using
                                  the file://path/to/file
                                  syntax.
                                  
                                  The --generate-param-json-input
                                  option can be used to generate an example of
                                  the JSON which must be provided. We recommend
                                  storing this example
                                  in a file, modifying it
                                  as needed and then passing it back in via the
                                  file:// syntax.
  --if-match TEXT                 The entity tag (ETag) to match. For creating
                                  and committing a multipart upload to an
                                  object, this is the entity tag of the target
                                  object. For uploading a part, this is the
                                  entity tag of the target part.
  --if-none-match TEXT            The entity tag (ETag) to avoid matching. The
                                  only valid value is '*', which indicates that
                                  the request should fail if the object already
                                  exists. For creating and committing a
                                  multipart upload, this is the entity tag of
                                  the target object. For uploading a part, this
                                  is the entity tag of the target part.
  --force                         Perform update without prompting for
                                  confirmation.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os preauth-request --help
Usage: oci os preauth-request [OPTIONS] COMMAND [ARGS]...

  Pre-authenticated requests provide a way to let users access a bucket or an
  object without having their own credentials. When you create a pre-
  authenticated request, a unique URL is generated. Users in your
  organization, partners, or third parties can use this URL to access the
  targets identified in the pre-authenticated request. See [Using Pre-
  Authenticated Requests].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you are not authorized, talk to an administrator. If you are an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  For detailed help on any of these individual commands, enter
                  <command> --help.

Commands:
  create  Creates a pre-authenticated request specific...
  delete  Deletes the pre-authenticated request for the...
  get     Gets the pre-authenticated request for the...
  list    Lists pre-authenticated requests for the...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os preauth-request create --help
Usage: oci os preauth-request create [OPTIONS]

  Creates a pre-authenticated request specific to the bucket.

Options:
  -ns, --namespace-name, --namespace TEXT
                                  The Object Storage namespace used for the
                                  request. If not provided, this parameter will
                                  be obtained internally using a call to 'oci os
                                  ns get'
  -bn, --bucket-name TEXT         The name of the bucket. Avoid entering
                                  confidential information. Example: `my-new-
                                  bucket1` [required]
  --name TEXT                     A user-specified name for the pre-
                                  authenticated request. Names can be helpful in
                                  managing pre-authenticated requests.
                                  [required]
  --access-type [ObjectRead|ObjectWrite|ObjectReadWrite|AnyObjectWrite]
                                  The operation that can be performed on this
                                  resource. [required]
  --time-expires DATETIME         The expiration date for the pre-authenticated
                                  request as per [RFC 3339]. After this date the
                                  pre-authenticated request will no longer be
                                  valid.
                                  
                                  The following datetime formats are
                                  supported:
                                  
                                  UTC with milliseconds
                                  ***********************
                                  Format: YYYY-MM-
                                  DDTHH:mm:ss.sssTZD
                                  Example:
                                  2017-09-15T20:30:00.123Z
                                  
                                  UTC without
                                  milliseconds
                                  **************************
                                  Format: YYYY-MM-DDTHH:mm:ssTZD
                                  Example:
                                  2017-09-15T20:30:00Z
                                  
                                  UTC with minute
                                  precision
                                  **************************
                                  Format:
                                  YYYY-MM-DDTHH:mmTZD
                                  Example: 2017-09-15T20:30Z
                                  
                                  Timezone with milliseconds
                                  ***************************
                                  Format: YYYY-MM-
                                  DDTHH:mm:ssTZD
                                  Example:
                                  2017-09-15T12:30:00.456-08:00,
                                  2017-09-15T12:30:00.456-0800
                                  
                                  Timezone
                                  without milliseconds
                                  *******************************
                                  Format: YYYY-
                                  MM-DDTHH:mm:ssTZD
                                  Example:
                                  2017-09-15T12:30:00-08:00,
                                  2017-09-15T12:30:00-0800
                                  
                                  Timezone with
                                  minute precision
                                  *******************************
                                  Format: YYYY-
                                  MM-DDTHH:mmTZD
                                  Example:
                                  2017-09-15T12:30-08:00,
                                  2017-09-15T12:30-0800
                                  
                                  Short date and time
                                  ********************
                                  The
                                  timezone for this date and time will be taken
                                  as UTC (Needs to be surrounded by single or
                                  double quotes)
                                  Format: 'YYYY-MM-DD HH:mm' or
                                  "YYYY-MM-DD HH:mm"
                                  Example: '2017-09-15 17:25'
                                  
                                  Date Only
                                  *********
                                  This date will be taken
                                  as midnight UTC of that day
                                  Format: YYYY-MM-DD
                                  Example: 2017-09-15
                                  
                                  Epoch seconds
                                  **************
                                  Example: 1412195400
                                  [required]
  -on, --object-name TEXT         The name of the object that is being granted
                                  access to by the pre-authenticated request.
                                  Avoid entering confidential information. The
                                  object name can be null and if so, the pre-
                                  authenticated request grants access to the
                                  entire bucket.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os preauth-request delete --help
Usage: oci os preauth-request delete [OPTIONS]

  Deletes the pre-authenticated request for the bucket.

Options:
  -ns, --namespace-name, --namespace TEXT
                                  The Object Storage namespace used for the
                                  request. If not provided, this parameter will
                                  be obtained internally using a call to 'oci os
                                  ns get'
  -bn, --bucket-name TEXT         The name of the bucket. Avoid entering
                                  confidential information. Example: `my-new-
                                  bucket1` [required]
  --par-id TEXT                   The unique identifier for the pre-
                                  authenticated request. This can be used to
                                  manage operations against the pre-
                                  authenticated request, such as GET or DELETE.
                                  [required]
  --force                         Perform deletion without prompting for
                                  confirmation.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os preauth-request get --help
Usage: oci os preauth-request get [OPTIONS]

  Gets the pre-authenticated request for the bucket.

Options:
  -ns, --namespace-name, --namespace TEXT
                                  The Object Storage namespace used for the
                                  request. If not provided, this parameter will
                                  be obtained internally using a call to 'oci os
                                  ns get'
  -bn, --bucket-name TEXT         The name of the bucket. Avoid entering
                                  confidential information. Example: `my-new-
                                  bucket1` [required]
  --par-id TEXT                   The unique identifier for the pre-
                                  authenticated request. This can be used to
                                  manage operations against the pre-
                                  authenticated request, such as GET or DELETE.
                                  [required]
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os preauth-request list --help
Usage: oci os preauth-request list [OPTIONS]

  Lists pre-authenticated requests for the bucket.

Options:
  -ns, --namespace-name, --namespace TEXT
                                  The Object Storage namespace used for the
                                  request. If not provided, this parameter will
                                  be obtained internally using a call to 'oci os
                                  ns get'
  -bn, --bucket-name TEXT         The name of the bucket. Avoid entering
                                  confidential information. Example: `my-new-
                                  bucket1` [required]
  --object-name-prefix TEXT       User-specified object name prefixes can be
                                  used to query and return a list of pre-
                                  authenticated requests.
  --limit INTEGER                 The maximum number of items to return.
  --page TEXT                     The page at which to start retrieving results.
  --all                           Fetches all pages of results. If you provide
                                  this option, then you cannot provide the
                                  --limit option.
  --page-size INTEGER             When fetching results, the number of results
                                  to fetch per call. Only valid when used with
                                  --all or --limit, and ignored otherwise.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os work-request --help
Usage: oci os work-request [OPTIONS] COMMAND [ARGS]...

  A description of workRequest status.

Options:
  -?, -h, --help  For detailed help on any of these individual commands, enter
                  <command> --help.

Commands:
  cancel  Cancels a work request.
  get     Gets the status of the work request for the...
  list    Lists the work requests in a compartment.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os work-request cancel --help
Usage: oci os work-request cancel [OPTIONS]

  Cancels a work request.

Options:
  --work-request-id TEXT  The ID of the asynchronous request. [required]
  --force                 Perform deletion without prompting for confirmation.
  --from-json TEXT        Provide input to this command as a JSON document from
                          a file using the file://path-to/file syntax.
                          
                          The
                          --generate-full-command-json-input option can be used
                          to generate a sample json file to be used with this
                          command option. The key names are pre-populated and
                          match the command option names (converted to camelCase
                          format, e.g. compartment-id --> compartmentId), while
                          the values of the keys need to be populated by the
                          user before using the sample file as an input to this
                          command. For any command option that accepts multiple
                          values, the value of the key can be a JSON array.
                          Options can still be provided on the command line. If
                          an option exists in both the JSON document and the
                          command line then the command line specified value
                          will be used.
                          
                          For examples on usage of this option,
                          please see our "using CLI with advanced JSON options"
                          link: https://docs.cloud.oracle.com/iaas/Content/API/S
                          DKDocs/cliusing.htm#AdvancedJSONOptions
  -?, -h, --help          For detailed help on any of these individual commands,
                          enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os work-request get --help
Usage: oci os work-request get [OPTIONS]

  Gets the status of the work request for the given ID.

Options:
  --work-request-id TEXT  The ID of the asynchronous request. [required]
  --from-json TEXT        Provide input to this command as a JSON document from
                          a file using the file://path-to/file syntax.
                          
                          The
                          --generate-full-command-json-input option can be used
                          to generate a sample json file to be used with this
                          command option. The key names are pre-populated and
                          match the command option names (converted to camelCase
                          format, e.g. compartment-id --> compartmentId), while
                          the values of the keys need to be populated by the
                          user before using the sample file as an input to this
                          command. For any command option that accepts multiple
                          values, the value of the key can be a JSON array.
                          Options can still be provided on the command line. If
                          an option exists in both the JSON document and the
                          command line then the command line specified value
                          will be used.
                          
                          For examples on usage of this option,
                          please see our "using CLI with advanced JSON options"
                          link: https://docs.cloud.oracle.com/iaas/Content/API/S
                          DKDocs/cliusing.htm#AdvancedJSONOptions
  -?, -h, --help          For detailed help on any of these individual commands,
                          enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os work-request list --help
Usage: oci os work-request list [OPTIONS]

  Lists the work requests in a compartment.

Options:
  -c, --compartment-id TEXT  The ID of the compartment in which to list buckets.
                             [required]
  --page TEXT                The page at which to start retrieving results.
  --limit INTEGER            The maximum number of items to return.
  --all                      Fetches all pages of results. If you provide this
                             option, then you cannot provide the --limit option.
  --page-size INTEGER        When fetching results, the number of results to
                             fetch per call. Only valid when used with --all or
                             --limit, and ignored otherwise.
  --from-json TEXT           Provide input to this command as a JSON document
                             from a file using the file://path-to/file syntax.
                             The --generate-full-command-json-input option can
                             be used to generate a sample json file to be used
                             with this command option. The key names are pre-
                             populated and match the command option names
                             (converted to camelCase format, e.g. compartment-id
                             --> compartmentId), while the values of the keys
                             need to be populated by the user before using the
                             sample file as an input to this command. For any
                             command option that accepts multiple values, the
                             value of the key can be a JSON array.
                             
                             Options can
                             still be provided on the command line. If an option
                             exists in both the JSON document and the command
                             line then the command line specified value will be
                             used.
                             
                             For examples on usage of this option, please
                             see our "using CLI with advanced JSON options"
                             link: https://docs.cloud.oracle.com/iaas/Content/AP
                             I/SDKDocs/cliusing.htm#AdvancedJSONOptions
  -?, -h, --help             For detailed help on any of these individual
                             commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os work-request-error --help
Usage: oci os work-request-error [OPTIONS] COMMAND [ARGS]...

Options:
  -?, -h, --help  For detailed help on any of these individual commands, enter
                  <command> --help.

Commands:
  list  Lists the errors of the work request with the...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os work-request-error list --help
Usage: oci os work-request-error list [OPTIONS]

  Lists the errors of the work request with the given ID.

Options:
  --work-request-id TEXT  The ID of the asynchronous request. [required]
  --page TEXT             The page at which to start retrieving results.
  --limit INTEGER         The maximum number of items to return.
  --all                   Fetches all pages of results. If you provide this
                          option, then you cannot provide the --limit option.
  --page-size INTEGER     When fetching results, the number of results to fetch
                          per call. Only valid when used with --all or --limit,
                          and ignored otherwise.
  --from-json TEXT        Provide input to this command as a JSON document from
                          a file using the file://path-to/file syntax.
                          
                          The
                          --generate-full-command-json-input option can be used
                          to generate a sample json file to be used with this
                          command option. The key names are pre-populated and
                          match the command option names (converted to camelCase
                          format, e.g. compartment-id --> compartmentId), while
                          the values of the keys need to be populated by the
                          user before using the sample file as an input to this
                          command. For any command option that accepts multiple
                          values, the value of the key can be a JSON array.
                          Options can still be provided on the command line. If
                          an option exists in both the JSON document and the
                          command line then the command line specified value
                          will be used.
                          
                          For examples on usage of this option,
                          please see our "using CLI with advanced JSON options"
                          link: https://docs.cloud.oracle.com/iaas/Content/API/S
                          DKDocs/cliusing.htm#AdvancedJSONOptions
  -?, -h, --help          For detailed help on any of these individual commands,
                          enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os work-request-log-entry --help
Usage: oci os work-request-log-entry [OPTIONS] COMMAND [ARGS]...

Options:
  -?, -h, --help  For detailed help on any of these individual commands, enter
                  <command> --help.

Commands:
  list  Lists the logs of the work request with the...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci os work-request-log-entry list --help
Usage: oci os work-request-log-entry list [OPTIONS]

  Lists the logs of the work request with the given ID.

Options:
  --work-request-id TEXT  The ID of the asynchronous request. [required]
  --page TEXT             The page at which to start retrieving results.
  --limit INTEGER         The maximum number of items to return.
  --all                   Fetches all pages of results. If you provide this
                          option, then you cannot provide the --limit option.
  --page-size INTEGER     When fetching results, the number of results to fetch
                          per call. Only valid when used with --all or --limit,
                          and ignored otherwise.
  --from-json TEXT        Provide input to this command as a JSON document from
                          a file using the file://path-to/file syntax.
                          
                          The
                          --generate-full-command-json-input option can be used
                          to generate a sample json file to be used with this
                          command option. The key names are pre-populated and
                          match the command option names (converted to camelCase
                          format, e.g. compartment-id --> compartmentId), while
                          the values of the keys need to be populated by the
                          user before using the sample file as an input to this
                          command. For any command option that accepts multiple
                          values, the value of the key can be a JSON array.
                          Options can still be provided on the command line. If
                          an option exists in both the JSON document and the
                          command line then the command line specified value
                          will be used.
                          
                          For examples on usage of this option,
                          please see our "using CLI with advanced JSON options"
                          link: https://docs.cloud.oracle.com/iaas/Content/API/S
                          DKDocs/cliusing.htm#AdvancedJSONOptions
  -?, -h, --help          For detailed help on any of these individual commands,
                          enter <command> --help.

