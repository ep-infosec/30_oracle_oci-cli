# coding: utf-8
# Copyright (c) 2016, 2021, Oracle and/or its affiliates.  All rights reserved.
# This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.

import unittest
from tests import util


class TestRunLogChanges(unittest.TestCase):
    def setUp(self):
        pass

    # Test 1 :
    # Rename "oci vulnerability-scanning work-request-log-entry list-work-request-logs --work-request-id"
    # to     "oci vulnerability-scanning work-request-log-entry list                   --work-request-id"

    # Test 1.1: list-work-request-logs is removed
    def test_list_work_request_log_removed(self):
        result = util.invoke_command(['vulnerability-scanning', 'work-request-log-entry', 'list-work-request-logs'])
        assert "Error: No such command 'list-work-request-logs'." in result.output

    # Test 1.2: list is added
    def test_list_work_request_log_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'work-request-log-entry', 'list'])
        assert 'Error: Missing option(s) --work-request-id.' in result.output

    # Test 2 :
    # Remove "oci vulnerability-scanning container scan target create-container-scan-target-create-ocir-container-scan-registry-details --compartment-id ..."
    def test_create_container_scan_target_create_ocir_container_scan_registry_details_removed(self):
        result = util.invoke_command(['vulnerability-scanning', 'container-scan-target', 'create-container-scan-target-create-ocir-container-scan-registry-details'])
        assert "Error: No such command 'container-scan-target'." in result.output

    # Test 3 :
    # Remove "oci vulnerability-scanning container scan target update-container-scan-target-update-ocir-container-scan-registry-details --container-scan-target-id ..."
    def test_update_container_scan_target_update_ocir_container_scan_registry_details_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'container-scan-target', 'update-container-scan-target-update-ocir-container-scan-registry-details'])
        assert "Error: No such command 'container-scan-target'." in result.output

    # Test 4 :
    # Rename "oci vulnerability-scanning host-cis-benchmark-scan-result <command>"
    # to     "oci vulnerability-scanning host scan result cis-benchmark <command>"

    # Test 4.1: host-cis-benchmark-scan-result is removed
    def test_host_cis_benchmark_scan_result_removed(self):
        result = util.invoke_command(['vulnerability-scanning', 'host-cis-benchmark-scan-result', 'list'])
        assert "Error: No such command 'host-cis-benchmark-scan-result'." in result.output

    # Test 4.2: list is added
    def test_host_scan_result_cis_benchmark_list_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'host', 'scan', 'result', 'cis-benchmark', 'list'])
        assert 'Error: Missing option(s) --compartment-id.' in result.output

    # Test 4.3: get is added
    def test_host_scan_result_cis_benchmark_get_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'host', 'scan', 'result', 'cis-benchmark', 'get'])
        assert 'Error: Missing option(s) --host-cis-benchmark-scan-result-id.' in result.output

    # Test 4.4: delete is added
    def test_host_scan_result_cis_benchmark_delete_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'host', 'scan', 'result', 'cis-benchmark', 'delete'])
        assert 'Error: Missing option(s) --host-cis-benchmark-scan-result-id.' in result.output

    # Test 4.5: change compartment is added
    def test_host_scan_result_cis_benchmark_change_compartment_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'host', 'scan', 'result', 'cis-benchmark', 'change-compartment'])
        assert 'Error: Missing option(s) --host-cis-benchmark-scan-result-id, --compartment-id.' in result.output

    # Test 5 :
    # Rename "oci vulnerability-scanning host-port-scan-result <command>"
    # to     "oci vulnerability-scanning host scan result port <command>"

    # Test 5.1: host-port-scan-result is removed
    def test_host_port_scan_result_removed(self):
        result = util.invoke_command(['vulnerability-scanning', 'host-port-scan-result', 'list'])
        assert "Error: No such command 'host-port-scan-result'." in result.output

    # Test 5.2: list is added
    def test_host_scan_result_port_list_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'host', 'scan', 'result', 'port', 'list'])
        assert 'Error: Missing option(s) --compartment-id.' in result.output

    # Test 5.3: get is added
    def test_host_scan_result_port_get_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'host', 'scan', 'result', 'port', 'get'])
        assert 'Error: Missing option(s) --host-port-scan-result-id.' in result.output

    # Test 5.4: delete is added
    def test_host_scan_result_port_delete_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'host', 'scan', 'result', 'port', 'delete'])
        assert 'Error: Missing option(s) --host-port-scan-result-id.' in result.output

    # Test 4.5: change compartment is added
    def test_host_scan_result_port_change_compartment_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'host', 'scan', 'result', 'port', 'change-compartment'])
        assert 'Error: Missing option(s) --host-port-scan-result-id, --compartment-id.' in result.output

    # Test 6 :
    # Rename "oci vulnerability-scanning host-agent-scan-result <command>"
    # to     "oci vulnerability-scanning host scan result agent <command>"

    # Test 6.1: host-agent-scan-result is removed
    def test_host_agent_scan_result_removed(self):
        result = util.invoke_command(['vulnerability-scanning', 'host-agent-scan-result', 'list'])
        assert "Error: No such command 'host-agent-scan-result'." in result.output

    # Test 6.2: list is added
    def test_host_scan_result_agent_list_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'host', 'scan', 'result', 'agent', 'list'])
        assert 'Error: Missing option(s) --compartment-id.' in result.output

    # Test 6.3: get is added
    def test_host_scan_result_agent_get_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'host', 'scan', 'result', 'agent', 'get'])
        assert 'Error: Missing option(s) --host-agent-scan-result-id.' in result.output

    # Test 6.4: delete is added
    def test_host_scan_result_agent_delete_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'host', 'scan', 'result', 'agent', 'delete'])
        assert 'Error: Missing option(s) --host-agent-scan-result-id.' in result.output

    # Test 6.5: change compartment is added
    def test_host_scan_result_agent_change_compartment_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'host', 'scan', 'result', 'agent', 'change-compartment'])
        assert 'Error: Missing option(s) --host-agent-scan-result-id, --compartment-id.' in result.output

    # Test 6.6: export-host-agent-scan-result-csv is removed
    def test_host_scan_result_agent_export_verbose_removed(self):
        result = util.invoke_command(['vulnerability-scanning', 'host', 'scan', 'result', 'agent', 'export-host-agent-scan-result-csv'])
        assert "Error: No such command 'export-host-agent-scan-result-csv'." in result.output

    # Test 6.7: export csv is added
    def test_host_scan_result_agent_export_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'host', 'scan', 'result', 'agent', 'export-csv'])
        assert 'Error: Missing option(s) --compartment-id, --time-started-after, --time-started-before, --file.' in result.output

    # Test 7 :
    # Rename "oci vulnerability-scanning host-endpoint-protection-scan-result <command>"
    # to     "oci vulnerability-scanning host scan result endpoint-protection <command>"

    # Test 7.1: host-endpoint-protection-scan-result is removed
    def test_host_endpoint_protection_scan_result_removed(self):
        result = util.invoke_command(['vulnerability-scanning', 'host-endpoint-protection-scan-result', 'list'])
        assert "Error: No such command 'host-endpoint-protection-scan-result'." in result.output

    # Test 7.2: list is added
    def test_host_scan_result_endpoint_protection_list_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'host', 'scan', 'result', 'endpoint-protection', 'list'])
        assert 'Error: Missing option(s) --compartment-id.' in result.output

    # Test 7.3: get is added
    def test_host_scan_result_endpoint_protection_get_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'host', 'scan', 'result', 'endpoint-protection', 'get'])
        assert 'Error: Missing option(s) --host-endpoint-protection-scan-result-id.' in result.output

    # Test 7.4: delete is added
    def test_host_scan_result_endpoint_protection_delete_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'host', 'scan', 'result', 'endpoint-protection', 'delete'])
        assert 'Error: Missing option(s) --host-endpoint-protection-scan-result-id.' in result.output

    # Test 7.5: change compartment is added
    def test_host_scan_result_endpoint_protection_change_compartment_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'host', 'scan', 'result', 'endpoint-protection', 'change-compartment'])
        assert 'Error: Missing option(s) --host-endpoint-protection-scan-result-id, --compartment-id.' in result.output

    # Test 8 :
    # Rename "oci vulnerability-scanning host-scan-recipe <command>"
    # to     "oci vulnerability-scanning host scan recipe <command>"

    # Test 8.1: host-scan-recipe is removed
    def test_host_scan_recipe_removed(self):
        result = util.invoke_command(['vulnerability-scanning', 'host-scan-recipe', 'list'])
        assert "Error: No such command 'host-scan-recipe'." in result.output

    # Test 8.2: create is added
    def test_host_scan_recipe_create_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'host', 'scan', 'recipe', 'create'])
        assert 'Error: Missing option(s) --compartment-id, --port-settings, --agent-settings, --schedule.' in result.output

    # Test 8.3: get is added
    def test_host_scan_recipe_get_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'host', 'scan', 'recipe', 'get'])
        assert 'Error: Missing option(s) --host-scan-recipe-id.' in result.output

    # Test 8.4: delete is added
    def test_host_scan_recipe_delete_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'host', 'scan', 'recipe', 'delete'])
        assert 'Error: Missing option(s) --host-scan-recipe-id.' in result.output

    # Test 8.5: change compartment is added
    def test_host_scan_recipe_change_compartment_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'host', 'scan', 'recipe', 'change-compartment'])
        assert 'Error: Missing option(s) --host-scan-recipe-id, --compartment-id.' in result.output

    # Test 8.6: update is added
    def test_host_scan_recipe_update_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'host', 'scan', 'recipe', 'update'])
        assert 'Error: Missing option(s) --host-scan-recipe-id.' in result.output

    # Test 8.7: list is added
    def test_host_scan_recipe_list_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'host', 'scan', 'recipe', 'list'])
        assert 'Error: Missing option(s) --compartment-id.' in result.output

    # Test 9 :
    # Rename "oci vulnerability-scanning host-scan-target <command>"
    # to     "oci vulnerability-scanning host scan target <command>"

    # Test 9.1: host-scan-target is removed
    def test_host_scan_target_removed(self):
        result = util.invoke_command(['vulnerability-scanning', 'host-scan-target', 'list'])
        assert "Error: No such command 'host-scan-target'." in result.output

    # Test 9.2: create is added
    def test_host_scan_target_create_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'host', 'scan', 'target', 'create'])
        assert 'Error: Missing option(s) --compartment-id, --target-compartment-id, --host-scan-recipe-id.' in result.output

    # Test 9.3: get is added
    def test_host_scan_target_get_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'host', 'scan', 'target', 'get'])
        assert 'Error: Missing option(s) --host-scan-target-id.' in result.output

    # Test 9.4: delete is added
    def test_host_scan_target_delete_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'host', 'scan', 'target', 'delete'])
        assert 'Error: Missing option(s) --host-scan-target-id.' in result.output

    # Test 9.5: change compartment is added
    def test_host_scan_target_change_compartment_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'host', 'scan', 'target', 'change-compartment'])
        assert 'Error: Missing option(s) --host-scan-target-id, --compartment-id.' in result.output

    # Test 9.6: update is added
    def test_host_scan_target_update_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'host', 'scan', 'target', 'update'])
        assert 'Error: Missing option(s) --host-scan-target-id.' in result.output

    # Test 9.7: list is added
    def test_host_scan_target_list_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'host', 'scan', 'target', 'list'])
        assert 'Error: Missing option(s) --compartment-id.' in result.output

    # Test 10 :
    # Rename "oci vulnerability-scanning host-vulnerability <command>"
    # to     "oci vulnerability-scanning host vulnerability <command>"

    # Test 10.1: host-scan-target is removed
    def test_host_vulnerability_removed(self):
        result = util.invoke_command(['vulnerability-scanning', 'host-vulnerability', 'list'])
        assert "Error: No such command 'host-vulnerability'." in result.output

    # Test 10.2: list is added
    def test_host_vulnerability_list_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'host', 'vulnerability', 'list'])
        assert 'Error: Missing option(s) --compartment-id.' in result.output

    # Test 10.3: get is added
    def test_host_scan_vulnerability_get_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'host', 'vulnerability', 'get'])
        assert 'Error: Missing option(s) --host-vulnerability-id.' in result.output

    # Test 10.4: list-host-vulnerability-impacted-hosts is removed
    def test_host_vulnerability_list_hosts_verbose_removed(self):
        result = util.invoke_command(['vulnerability-scanning', 'host', 'vulnerability', 'list-host-vulnerability-impacted-hosts'])
        assert "Error: No such command 'list-host-vulnerability-impacted-hosts'." in result.output

    # Test 10.5: list-impacted-hosts is added
    def test_host_vulnerability_list_hosts_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'host', 'vulnerability', 'list-impacted-hosts'])
        assert 'Error: Missing option(s) --host-vulnerability-id.' in result.output

    # Test 10.6: export-host-vulnerability-csv is removed
    def test_host_vulnerability_export_verbose_removed(self):
        result = util.invoke_command(['vulnerability-scanning', 'host', 'vulnerability', 'export-host-vulnerability-csv'])
        assert "Error: No such command 'export-host-vulnerability-csv'." in result.output

    # Test 10.7: export-csv is added
    def test_host_vulnerability_export_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'host', 'vulnerability', 'export-csv'])
        assert 'Error: Missing option(s) --compartment-id, --time-last-detected-greater-than-or-equal-to, --time-last-detected-less-than-or-equal-to, --file.' in result.output

    # Test 11 :
    # Rename "oci vulnerability-scanning container-scan-recipe <command>"
    # to     "oci vulnerability-scanning container scan recipe <command>"

    # Test 11.1: container-scan-recipe is removed
    def test_container_scan_recipe_removed(self):
        result = util.invoke_command(['vulnerability-scanning', 'container-scan-recipe', 'list'])
        assert "Error: No such command 'container-scan-recipe'." in result.output

    # Test 11.2: create is added
    def test_container_scan_recipe_create_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'container', 'scan', 'recipe', 'create'])
        assert 'Error: Missing option(s) --compartment-id, --scan-settings.' in result.output

    # Test 11.3: get is added
    def test_container_scan_recipe_get_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'container', 'scan', 'recipe', 'get'])
        assert 'Error: Missing option(s) --container-scan-recipe-id.' in result.output

    # Test 11.4: delete is added
    def test_container_scan_recipe_delete_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'container', 'scan', 'recipe', 'delete'])
        assert 'Error: Missing option(s) --container-scan-recipe-id.' in result.output

    # Test 11.5: change compartment is added
    def test_container_scan_recipe_change_compartment_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'container', 'scan', 'recipe', 'change-compartment'])
        assert 'Error: Missing option(s) --container-scan-recipe-id, --compartment-id.' in result.output

    # Test 11.6: update is added
    def test_container_scan_recipe_update_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'container', 'scan', 'recipe', 'update'])
        assert 'Error: Missing option(s) --container-scan-recipe-id.' in result.output

    # Test 11.7: list is added
    def test_container_scan_recipe_list_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'container', 'scan', 'recipe', 'list'])
        assert 'Error: Missing option(s) --compartment-id.' in result.output

    # Test 12 :
    # Rename "oci vulnerability-scanning container-scan-target <command>"
    # to     "oci vulnerability-scanning container scan target <command>"

    # Test 12.1: host-scan-target is removed
    def test_container_scan_target_removed(self):
        result = util.invoke_command(['vulnerability-scanning', 'container-scan-target', 'list'])
        assert "Error: No such command 'container-scan-target'." in result.output

    # Test 12.2: create is added
    def test_container_scan_target_create_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'container', 'scan', 'target', 'create'])
        assert 'Error: Missing option(s) --compartment-id, --target-registry, --container-scan-recipe-id.' in result.output

    # Test 12.3: get is added
    def test_container_scan_target_get_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'container', 'scan', 'target', 'get'])
        assert 'Error: Missing option(s) --container-scan-target-id.' in result.output

    # Test 12.4: delete is added
    def test_container_scan_target_delete_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'container', 'scan', 'target', 'delete'])
        assert 'Error: Missing option(s) --container-scan-target-id.' in result.output

    # Test 12.5: change compartment is added
    def test_container_scan_target_change_compartment_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'container', 'scan', 'target', 'change-compartment'])
        assert 'Error: Missing option(s) --container-scan-target-id, --compartment-id.' in result.output

    # Test 12.6: update is added
    def test_container_scan_target_update_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'container', 'scan', 'target', 'update'])
        assert 'Error: Missing option(s) --container-scan-target-id.' in result.output

    # Test 12.7: list is added
    def test_container_scan_target_list_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'container', 'scan', 'target', 'list'])
        assert 'Error: Missing option(s) --compartment-id.' in result.output

    # Test 13 :
    # Rename "oci vulnerability-scanning container-scan-result <command>"
    # to     "oci vulnerability-scanning container scan result <command>"

    # Test 13.1: container-scan-result is removed
    def test_container_scan_result_removed(self):
        result = util.invoke_command(['vulnerability-scanning', 'container-scan-result', 'list'])
        assert "Error: No such command 'container-scan-result'." in result.output

    # Test 13.2: list is added
    def test_container_scan_result_list_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'container', 'scan', 'result', 'list'])
        assert 'Error: Missing option(s) --compartment-id.' in result.output

    # Test 13.3: get is added
    def test_container_scan_result_get_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'container', 'scan', 'result', 'get'])
        assert 'Error: Missing option(s) --container-scan-result-id.' in result.output

    # Test 13.4: delete is added
    def test_container_scan_result_delete_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'container', 'scan', 'result', 'delete'])
        assert 'Error: Missing option(s) --container-scan-result-id.' in result.output

    # Test 13.5: change compartment is added
    def test_container_scan_result_change_compartment_added(self):
        result = util.invoke_command(['vulnerability-scanning', 'container', 'scan', 'result', 'change-compartment'])
        assert 'Error: Missing option(s) --container-scan-result-id, --compartment-id.' in result.output
